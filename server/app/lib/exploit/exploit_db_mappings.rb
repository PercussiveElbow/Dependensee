require 'net/http'
require 'zip'
require 'fileutils'
require 'nokogiri'
require_relative '../../models/exploit'

class ExploitDbMappings

  EXPLOIT_MAPPING_SITE = 'cve.mitre.org'
  EXPLOIT_MAPPING_SITE_LOC = '/data/refs/refmap/allrefmaps.zip'
  EXPLOIT_MAPPING_DOWNLOAD_LOC = '/tmp/dependensee/mapping.zip'
  EXPLOIT_MAPPING_UNZIP_LOC = '/tmp/dependensee/mappings/'
  EXPLOIT_MAPPING_FILE_NAME = 'source-EXPLOIT-DB.html'

  def initialize(location)
    print "Beginning download of ExploitDB mappings\n"
    Net::HTTP.start(EXPLOIT_MAPPING_SITE) do |http|
      resp = http.get(EXPLOIT_MAPPING_SITE_LOC)
      open(EXPLOIT_MAPPING_DOWNLOAD_LOC, "w+") do |file|
        file.write(resp.body.encode("ASCII-8BIT").force_encoding("utf-8"))
      end
    end
    puts "Done download of ExploitDB mappings.\nBeginning extract...\n"
    FileUtils.rm_rf EXPLOIT_MAPPING_UNZIP_LOC
    FileUtils.mkdir_p EXPLOIT_MAPPING_UNZIP_LOC

    Zip::File.open(EXPLOIT_MAPPING_DOWNLOAD_LOC) do |zip_file|
      zip_file.each do |entry|
        entry.extract('/tmp/dependensee/mappings/' +entry.name)
      end
    end
    # Exploit.delete_all
    doc = Nokogiri::HTML(File.read(EXPLOIT_MAPPING_UNZIP_LOC+EXPLOIT_MAPPING_FILE_NAME))
    rows = doc.xpath('//table/tr')
    count = 0
    details = rows.collect do |row|
      detail = {}
      [[:id, 'td[1]/text()'], [:cves, 'td[2]/descendant::*/text()']].each do |name, xpath| #todo fix bug where this only grabs first cve
        detail[name] = row.at_xpath(xpath).to_s.strip
      end
      detail[:id] = detail[:id].gsub(/[^0-9,.]/, "")
      detail[:cves] = detail[:cves].gsub('CVE-', '')
      count += 1
      if count >3
        # puts detail[:cves]
        Exploit::new(:edb_id => detail[:id], :cves => [detail[:cves]]).save! if Exploit.where(" '#{detail[:cves]}' = ANY (cves)").empty?
      end

    end
  end

end